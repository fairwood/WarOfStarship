

/*外部参数*/
// var a1 ; /*攻击方1攻击*/
// var b1 ; /*攻击方1防御*/
// var g1 ; /*攻击方4攻击*/
// var h1 ; /*攻击方4防御*/

// var a2 ; /*防守方1攻击*/
// var b2 ; /*防守方1防御*/
// var g2 ; /*防守方4攻击*/
// var h2 ; /*防守方4防御*/
// var j2 ; /*防守方守家武器攻击*/


// var aaa1 ; /*攻击方1数量初始*/
// var ddd1 ; /*攻击方4数量初始*/
// var aaa2 ; /*防守方1数量初始*/
// var ddd2 ; /*防守方4数量初始*/
// var fff2 ; /*防守方守家武器数量初始*/

function battle(a1,b1,g1,h1,a2,b2,g2,h2,j2,aaa1,ddd1,aaa2,ddd2,fff2)
{



/*系数设定*/
var k3=0.5;  /*部队数量幂*/
var k4=5;  /*死亡个数系数*/
var k5=50;  /*防御减伤常数*/
var k6=100;  /*最小部队个数*/
var k2=5;   /*单回合守家武器损耗*/

var k1=0; /*防守方属性加成*/


/*输出变量*/
var x; /*胜负，0为攻击方胜，1为防守方胜*/

var aa1 = aaa1; /*攻击方2数量*/

var dd1 =ddd1; /*攻击方4数量*/

var aa2 = aaa2; /*防守方2数量*/

var dd2 =ddd2; /*防守方4数量*/
var ff2 =fff2; /*防守方守家武器数量*/

/*战斗回合*/

for (var i=1; i<=20; i++)
{

var y1=a1*(aa1/k6)**k3; /*攻击方1输出能力*/ 
 
var y4=g1*(dd1/k6)**k3; /*攻击方4输出能力*/ 

var z1=a2*(aa2/k6)**k3; /*防御方1输出能力*/ 

var z4=g2*(dd2/k6)**k3; /*防御方4输出能力*/ 
var z5=j2*(ff2/k6)**k3; /*防御方守家武器输出能力*/ 


/*守家武器伤害计算*/

if (aa1+dd1>0)
{
aa1= Math.max(aa1-z5*k5/(k5+b1)/k4/2,0);
dd1= Math.max(dd1-z5*k5/(k5+h1)/k4/2,0);
ff2= Math.max(ff2-k2,0);
}


/*1伤害计算*/


if (aa2>0)
  {aa2= Math.max(aa2-y1*k5/(k5+b2)/k4/2,0);
  dd2= Math.max(dd2-y1*k5/(k5+h2)/k4/2,0)}

  else 
{dd2= Math.max(dd2-y1*k5/(k5+h2)/k4,0)}

if (aa1>0)
  {aa1= Math.max(aa1-z1*k5/(k5+b1)/k4/2,0);
  dd1= Math.max(dd1-z1*k5/(k5+h1)/k4/2,0)}

  else 
{dd1= Math.max(dd1-z1*k5/(k5+h1)/k4,0)}






/*4伤害计算*/

if (aa2>0)
  {aa2= Math.max(aa2-y1*k5/(k5+b2)/k4,0)}

 else 
{dd2= Math.max(dd2-y1*k5/(k5+h2)/k4,0)}

if (aa1>0)
  {aa1= Math.max(aa1-z1*k5/(k5+b1)/k4,0)}

  else 
{dd1= Math.max(dd1-z1*k5/(k5+h1)/k4,0)}


}
var aa1 = Math.round(aa1); /*攻击方2数量取整*/
var bb1 = Math.round(bb1); /*攻击方2数量取整*/
var cc1 = Math.round(cc1); /*攻击方3数量取整*/
var dd1 = Math.round(dd1); /*攻击方4数量取整*/

var aa2 = Math.round(aa2); /*防守方2数量取整*/
var bb2 = Math.round(bb2); /*防守方2数量取整*/
var cc2 = Math.round(cc2); /*防守方3数量取整*/
var dd2 = Math.round(dd2); /*防守方4数量取整*/
var ff2 = Math.round(ff2); /*防守方4数量取整*/

/*胜负判断*/
  
if (aaa1-aa1+ddd1-dd1 < aaa2-aa2+ddd2-dd2)
  {x=0}
 else
  {x=1}







console.log('属性',a1,b1,g1,h1, '|',a2,b2,g2,h2,j2,k2, '兵力',aaa1,ddd1, '|',aaa2,ddd2,fff2, '获胜方', x, '剩余', aa1, dd1, '|', aa2, dd2, ff2);
}









battle(30,120,80,10,30,120,80,10,50,100,100,100,100,100);
battle(35,150,100,15,35,150,100,15,60,100,100,100,100,100);
battle(40,190,120,20,40,190,120,20,70,100,100,100,100,100);
battle(50,220,160,30,50,220,160,30,80,100,100,100,100,100);
battle(60,240,190,40,60,270,210,40,90,100,100,100,100,100);
battle(60,270,210,40,60,270,210,40,100,100,100,100,100,100);

battle(30,120,80,10,30,120,80,10,50,200,200,200,200,200);
battle(35,150,100,15,35,150,100,15,60,200,200,200,200,200);
battle(40,190,120,20,40,190,120,20,70,200,200,200,200,200);
battle(50,220,160,30,50,220,160,30,80,200,200,200,200,200);
battle(60,240,190,40,60,270,210,40,90,200,200,200,200,200);
battle(60,270,210,40,60,270,210,40,100,200,200,200,200,200);


battle(30,120,80,10,30,120,80,10,50,400,400,400,400,400);
battle(35,150,100,15,35,150,100,15,60,400,400,400,400,400);
battle(40,190,120,20,40,190,120,20,70,400,400,400,400,400);
battle(50,220,160,30,50,220,160,30,80,400,400,400,400,400);
battle(60,240,190,40,60,270,210,40,90,400,400,400,400,400);
battle(60,270,210,40,60,270,210,40,100,400,400,400,400,400);

battle(60,270,210,40,60,270,210,40,50,400,400,400,400,0);
battle(50,220,160,30,60,270,210,40,50,400,400,400,400,0);
battle(40,190,120,20,60,270,210,40,50,400,400,400,400,0);
battle(30,120,80,10,60,270,210,40,50,400,400,400,400,400,0);


battle(60,270,210,40,60,270,210,40,50,400,400,400,100,100,0);
battle(60,270,210,40,60,270,210,40,90,400,400,400,200,200,0);
battle(60,270,210,40,60,270,210,40,90,400,400,400,300,300,0);
battle(60,270,210,40,60,270,210,40,90,400,400,400,400,400,0);

battle(50,220,160,30,60,270,210,40,90,400,400,400,300,300,0);